{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Employee\\\\Desktop\\\\React\\\\hangman\\\\src\\\\components\\\\Keyboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addCorrectLetter, addWrongLetter, updateAttemptsLeft, addUsedLetter } from '../store/hangman';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Keyboard = () => {\n  _s();\n  const keys = useSelector(state => state.hangman.keys);\n  const usedLetters = useSelector(state => state.hangman.usedLetters);\n  const wrongLetters = useSelector(state => state.hangman.wrongLetters);\n  const correctLetters = useSelector(state => state.hangman.correctLetters);\n  const word = useSelector(state => state.hangman.word);\n  const attemptsLeft = useSelector(state => state.hangman.attemptsLeft);\n  const dispatch = useDispatch();\n  const handleButtonClick = e => {\n    const letter = e.target.value;\n    alert(letter);\n    alert(attemptsLeft);\n    if (attemptsLeft === 0) {\n      alert('No turns left');\n      return;\n    }\n    if (word.includes(letter)) {\n      alert('includes');\n      if (!correctLetters.includes(letter)) {\n        dispatch(addCorrectLetter(letter));\n      }\n    } else {\n      if (!wrongLetters.includes(letter)) {\n        dispatch(addWrongLetter(letter));\n        dispatch(updateAttemptsLeft());\n      }\n    }\n    dispatch(addUsedLetter(letter));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keyboard\",\n    children: keys.map((key, i) => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-light key \" + (wrongLetters.includes(key) ? 'wrongKey' : ''),\n        value: key,\n        onClick: e => handleButtonClick(e),\n        children: key\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Keyboard, \"6V7w38LagMYgKYW1HN3rb7yElwE=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = Keyboard;\nexport default Keyboard;\nvar _c;\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"names":["React","useSelector","useDispatch","addCorrectLetter","addWrongLetter","updateAttemptsLeft","addUsedLetter","Keyboard","keys","state","hangman","usedLetters","wrongLetters","correctLetters","word","attemptsLeft","dispatch","handleButtonClick","e","letter","target","value","alert","includes","map","key","i"],"sources":["C:/Users/Employee/Desktop/React/hangman/src/components/Keyboard.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {addCorrectLetter, addWrongLetter, updateAttemptsLeft, addUsedLetter} from '../store/hangman';\r\n\r\nconst Keyboard = () => {\r\n\r\n    const keys = useSelector((state) => state.hangman.keys);\r\n    const usedLetters = useSelector((state) => state.hangman.usedLetters);\r\n    const wrongLetters = useSelector((state) => state.hangman.wrongLetters);\r\n    const correctLetters = useSelector((state) => state.hangman.correctLetters);\r\n    const word = useSelector((state) => state.hangman.word);\r\n    const attemptsLeft = useSelector((state) => state.hangman.attemptsLeft);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleButtonClick = (e) => {\r\n        const letter = e.target.value;\r\n        alert(letter)\r\n        alert(attemptsLeft)\r\n        if (attemptsLeft === 0) {\r\n            alert('No turns left');\r\n            return;\r\n        }\r\n        if (word.includes(letter)) {\r\n            alert('includes')\r\n            if (!correctLetters.includes(letter)) {\r\n                dispatch(addCorrectLetter(letter));\r\n            }\r\n        } else {\r\n            if (!wrongLetters.includes(letter)) {\r\n                dispatch(addWrongLetter(letter));\r\n                dispatch(updateAttemptsLeft());\r\n            }\r\n        }\r\n\r\n        dispatch(addUsedLetter(letter));\r\n    }\r\n\r\n    return (\r\n        <div className='keyboard'>\r\n            {keys.map((key, i) => {\r\n                return (\r\n                    <button\r\n                        className={\"btn btn-light key \"  + (wrongLetters.includes(key) ? 'wrongKey' : '') }\r\n                        key={i}\r\n                        value={key}\r\n                        onClick={(e) => handleButtonClick(e)}\r\n                        >{key}\r\n                    </button>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Keyboard;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAAQC,gBAAgB,EAAEC,cAAc,EAAEC,kBAAkB,EAAEC,aAAa,QAAO,kBAAkB;AAAC;AAErG,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAEnB,MAAMC,IAAI,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC;EACvD,MAAMG,WAAW,GAAGV,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACC,WAAW,CAAC;EACrE,MAAMC,YAAY,GAAGX,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACE,YAAY,CAAC;EACvE,MAAMC,cAAc,GAAGZ,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACG,cAAc,CAAC;EAC3E,MAAMC,IAAI,GAAGb,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACI,IAAI,CAAC;EACvD,MAAMC,YAAY,GAAGd,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACK,YAAY,CAAC;EAEvE,MAAMC,QAAQ,GAAGd,WAAW,EAAE;EAE9B,MAAMe,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAMC,MAAM,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC7BC,KAAK,CAACH,MAAM,CAAC;IACbG,KAAK,CAACP,YAAY,CAAC;IACnB,IAAIA,YAAY,KAAK,CAAC,EAAE;MACpBO,KAAK,CAAC,eAAe,CAAC;MACtB;IACJ;IACA,IAAIR,IAAI,CAACS,QAAQ,CAACJ,MAAM,CAAC,EAAE;MACvBG,KAAK,CAAC,UAAU,CAAC;MACjB,IAAI,CAACT,cAAc,CAACU,QAAQ,CAACJ,MAAM,CAAC,EAAE;QAClCH,QAAQ,CAACb,gBAAgB,CAACgB,MAAM,CAAC,CAAC;MACtC;IACJ,CAAC,MAAM;MACH,IAAI,CAACP,YAAY,CAACW,QAAQ,CAACJ,MAAM,CAAC,EAAE;QAChCH,QAAQ,CAACZ,cAAc,CAACe,MAAM,CAAC,CAAC;QAChCH,QAAQ,CAACX,kBAAkB,EAAE,CAAC;MAClC;IACJ;IAEAW,QAAQ,CAACV,aAAa,CAACa,MAAM,CAAC,CAAC;EACnC,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,UAAU;IAAA,UACpBX,IAAI,CAACgB,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;MAClB,oBACI;QACI,SAAS,EAAE,oBAAoB,IAAKd,YAAY,CAACW,QAAQ,CAACE,GAAG,CAAC,GAAG,UAAU,GAAG,EAAE,CAAG;QAEnF,KAAK,EAAEA,GAAI;QACX,OAAO,EAAGP,CAAC,IAAKD,iBAAiB,CAACC,CAAC,CAAE;QAAA,UACnCO;MAAG,GAHAC,CAAC;QAAA;QAAA;QAAA;MAAA,QAID;IAEjB,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAC,GAjDInB,QAAQ;EAAA,QAEGN,WAAW,EACJA,WAAW,EACVA,WAAW,EACTA,WAAW,EACrBA,WAAW,EACHA,WAAW,EAEfC,WAAW;AAAA;AAAA,KAT1BK,QAAQ;AAmDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}