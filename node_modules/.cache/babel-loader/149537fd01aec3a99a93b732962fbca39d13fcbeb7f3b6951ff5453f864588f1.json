{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Employee\\\\Desktop\\\\React\\\\hangman\\\\src\\\\components\\\\Figure.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux'; // Import the useSelector from redux\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Figure = () => {\n  _s();\n  // Declare the wrongLetters variable from the hangman slice store\n  const wrongLetters = useSelector(state => state.hangman.wrongLetters);\n\n  // Get the count of the wrong letters array\n  const wrongLettersCount = wrongLetters.length;\n  return (\n    /*#__PURE__*/\n    // SVG\n    // Use an SVG to show the hangman and use conditional statements\n    // to show different parts depending on how many attempts have been used\n    _jsxDEV(\"svg\", {\n      height: \"250\",\n      width: \"200\",\n      className: \"figure-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"60\",\n        y1: \"20\",\n        x2: \"140\",\n        y2: \"20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"140\",\n        y1: \"20\",\n        x2: \"140\",\n        y2: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"60\",\n        y1: \"20\",\n        x2: \"60\",\n        y2: \"230\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"20\",\n        y1: \"230\",\n        x2: \"100\",\n        y2: \"230\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), wrongLettersCount > 0 && /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"140\",\n        cy: \"70\",\n        r: \"18\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), wrongLettersCount > 1 && /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"140\",\n        y1: \"90\",\n        x2: \"140\",\n        y2: \"150\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), wrongLettersCount > 2 && /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"140\",\n        y1: \"120\",\n        x2: \"120\",\n        y2: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), wrongLettersCount > 3 && /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"140\",\n        y1: \"120\",\n        x2: \"160\",\n        y2: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), wrongLettersCount > 4 && /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"140\",\n        y1: \"150\",\n        x2: \"120\",\n        y2: \"180\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), wrongLettersCount > 5 && /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"140\",\n        y1: \"150\",\n        x2: \"160\",\n        y2: \"180\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n    // End SVG\n  );\n};\n_s(Figure, \"k6QPlFs+HqOKCxlJ5+L6sBRo5Ns=\", false, function () {\n  return [useSelector];\n});\n_c = Figure;\nexport default Figure;\nvar _c;\n$RefreshReg$(_c, \"Figure\");","map":{"version":3,"names":["React","useSelector","Figure","wrongLetters","state","hangman","wrongLettersCount","length"],"sources":["C:/Users/Employee/Desktop/React/hangman/src/components/Figure.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux'; // Import the useSelector from redux\r\n\r\nconst Figure = () => {\r\n\r\n    // Declare the wrongLetters variable from the hangman slice store\r\n    const wrongLetters = useSelector((state) => state.hangman.wrongLetters);\r\n\r\n    // Get the count of the wrong letters array\r\n    const wrongLettersCount = wrongLetters.length;\r\n    \r\n    return (\r\n        // SVG\r\n        // Use an SVG to show the hangman and use conditional statements\r\n        // to show different parts depending on how many attempts have been used\r\n        <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n            {/* Base */}\r\n            <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n            <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n            <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n            <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n            {/* Head */}\r\n            {wrongLettersCount > 0 &&\r\n                <circle cx=\"140\" cy=\"70\" r=\"18\" />\r\n            }\r\n            {/* Body */}\r\n            {wrongLettersCount > 1 &&\r\n                <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />\r\n            }\r\n            {/* Left Arm */}\r\n            {wrongLettersCount > 2 &&\r\n                <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />\r\n            }\r\n            {/* Right Arm */}\r\n            {wrongLettersCount > 3 &&\r\n                <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />\r\n            }\r\n            {/* Left Leg */}\r\n            {wrongLettersCount > 4 &&\r\n                <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />\r\n            }\r\n            {/* Right Leg */}\r\n            {wrongLettersCount > 5 &&\r\n                <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />\r\n            }\r\n        </svg>\r\n        // End SVG\r\n    );\r\n};\r\n\r\nexport default Figure;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa,CAAC,CAAC;AAAA;AAE3C,MAAMC,MAAM,GAAG,MAAM;EAAA;EAEjB;EACA,MAAMC,YAAY,GAAGF,WAAW,CAAEG,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC;;EAEvE;EACA,MAAMG,iBAAiB,GAAGH,YAAY,CAACI,MAAM;EAE7C;IAAA;IACI;IACA;IACA;IACA;MAAK,MAAM,EAAC,KAAK;MAAC,KAAK,EAAC,KAAK;MAAC,SAAS,EAAC,kBAAkB;MAAA,wBAEtD;QAAM,EAAE,EAAC,IAAI;QAAC,EAAE,EAAC,IAAI;QAAC,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACzC;QAAM,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC,IAAI;QAAC,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eAC1C;QAAM,EAAE,EAAC,IAAI;QAAC,EAAE,EAAC,IAAI;QAAC,EAAE,EAAC,IAAI;QAAC,EAAE,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eACzC;QAAM,EAAE,EAAC,IAAI;QAAC,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,EAG1CD,iBAAiB,GAAG,CAAC,iBAClB;QAAQ,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC,IAAI;QAAC,CAAC,EAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,EAGrCA,iBAAiB,GAAG,CAAC,iBAClB;QAAM,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC,IAAI;QAAC,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,EAG9CA,iBAAiB,GAAG,CAAC,iBAClB;QAAM,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,EAG/CA,iBAAiB,GAAG,CAAC,iBAClB;QAAM,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,EAG/CA,iBAAiB,GAAG,CAAC,iBAClB;QAAM,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,EAG/CA,iBAAiB,GAAG,CAAC,iBAClB;QAAM,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC,KAAK;QAAC,EAAE,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;IAGpD;EAAA;AAER,CAAC;AAAC,GA9CIJ,MAAM;EAAA,QAGaD,WAAW;AAAA;AAAA,KAH9BC,MAAM;AAgDZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}