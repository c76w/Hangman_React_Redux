{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Employee\\\\Desktop\\\\React\\\\hangman\\\\src\\\\components\\\\Popup.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { resetGame, getRandomWord } from '../store/hangman';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Popup = props => {\n  _s();\n  const wrongLetters = useSelector(state => state.hangman.wrongLetters); // Get the wrong letters array from hangman state\n  const correctLetters = useSelector(state => state.hangman.correctLetters); // Get the correct letters array from hangman state\n  const word = useSelector(state => state.hangman.word); // Get the word from hangman state\n  const gameStatus = useSelector(state => state.hangman.gameStatus); // Get the game status from hangman state\n\n  const dispatch = useDispatch(); // Set the disptach\n\n  const handleOnClick = () => {\n    // Set a random word in the hangman reducer\n    dispatch(resetGame());\n  };\n  const Message = () => {\n    if (gameStatus === 'win') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"my-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 42\n          }, this), \" Congratulations - You Won! \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 92\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-info btn-lg\",\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    }\n    if (gameStatus === 'lose') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"my-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDE14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 42\n          }, this), \" Congratulations - You Won! \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDE14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 92\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The word was \", word, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Better luck next time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              handleOnClick();\n              props.randomWord();\n            },\n            className: \"btn btn-info btn-lg\",\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // Pop up to dispaly results\n    _jsxDEV(\"div\", {\n      class: \"modal-dialog modal-dialog-centered\",\n      children: /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Popup, \"/RUdo6yo76fCm7LAROGCyQLaogg=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","useSelector","useDispatch","resetGame","getRandomWord","Popup","props","wrongLetters","state","hangman","correctLetters","word","gameStatus","dispatch","handleOnClick","Message","randomWord"],"sources":["C:/Users/Employee/Desktop/React/hangman/src/components/Popup.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { resetGame, getRandomWord } from '../store/hangman';\r\n\r\nconst Popup = (props) => {\r\n\r\n    const wrongLetters = useSelector((state) => state.hangman.wrongLetters); // Get the wrong letters array from hangman state\r\n    const correctLetters = useSelector((state) => state.hangman.correctLetters); // Get the correct letters array from hangman state\r\n    const word = useSelector((state) => state.hangman.word); // Get the word from hangman state\r\n    const gameStatus = useSelector((state) => state.hangman.gameStatus); // Get the game status from hangman state\r\n\r\n    const dispatch = useDispatch(); // Set the disptach\r\n\r\n    const handleOnClick = () => {\r\n        // Set a random word in the hangman reducer\r\n        dispatch(resetGame());\r\n    }\r\n\r\n    const Message = () => {\r\n        if (gameStatus === 'win') {\r\n            return (\r\n                <div className='text-center'>\r\n                    <h2 className='my-4'><span>&#127881;</span> Congratulations - You Won! <span>&#127881;</span></h2>\r\n                    <div>\r\n                        <button type=\"button\" className='btn btn-info btn-lg'>Play Again</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        if (gameStatus === 'lose') {\r\n            return (\r\n                <div className='text-center'>\r\n                    <h2 className='my-4'><span>&#128532;</span> Congratulations - You Won! <span>&#128532;</span></h2>\r\n                    <p>The word was {word}!</p>\r\n                    <h6>Better luck next time.</h6>\r\n                    <div>\r\n                        <button type=\"button\" onClick={() => {handleOnClick(); props.randomWord();}} className='btn btn-info btn-lg'>Play Again</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        // Pop up to dispaly results\r\n        <div class=\"modal-dialog modal-dialog-centered\">\r\n            <Message />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Popup;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,aAAa,QAAQ,kBAAkB;AAAC;AAE5D,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAA;EAErB,MAAMC,YAAY,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC,CAAC,CAAC;EACzE,MAAMG,cAAc,GAAGT,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACC,cAAc,CAAC,CAAC,CAAC;EAC7E,MAAMC,IAAI,GAAGV,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACE,IAAI,CAAC,CAAC,CAAC;EACzD,MAAMC,UAAU,GAAGX,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACG,UAAU,CAAC,CAAC,CAAC;;EAErE,MAAMC,QAAQ,GAAGX,WAAW,EAAE,CAAC,CAAC;;EAEhC,MAAMY,aAAa,GAAG,MAAM;IACxB;IACAD,QAAQ,CAACV,SAAS,EAAE,CAAC;EACzB,CAAC;EAED,MAAMY,OAAO,GAAG,MAAM;IAClB,IAAIH,UAAU,KAAK,KAAK,EAAE;MACtB,oBACI;QAAK,SAAS,EAAC,aAAa;QAAA,wBACxB;UAAI,SAAS,EAAC,MAAM;UAAA,wBAAC;YAAA,UAAM;UAAS;YAAA;YAAA;YAAA;UAAA,QAAO,gCAA4B;YAAA,UAAM;UAAS;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAClG;UAAA,uBACI;YAAQ,IAAI,EAAC,QAAQ;YAAC,SAAS,EAAC,qBAAqB;YAAA,UAAC;UAAU;YAAA;YAAA;YAAA;UAAA;QAAS;UAAA;UAAA;UAAA;QAAA,QACvE;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAEd;IACA,IAAIA,UAAU,KAAK,MAAM,EAAE;MACvB,oBACI;QAAK,SAAS,EAAC,aAAa;QAAA,wBACxB;UAAI,SAAS,EAAC,MAAM;UAAA,wBAAC;YAAA,UAAM;UAAS;YAAA;YAAA;YAAA;UAAA,QAAO,gCAA4B;YAAA,UAAM;UAAS;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAClG;UAAA,WAAG,eAAa,EAACD,IAAI,EAAC,GAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAI,eAC3B;UAAA,UAAI;QAAsB;UAAA;UAAA;UAAA;QAAA,QAAK,eAC/B;UAAA,uBACI;YAAQ,IAAI,EAAC,QAAQ;YAAC,OAAO,EAAE,MAAM;cAACG,aAAa,EAAE;cAAER,KAAK,CAACU,UAAU,EAAE;YAAC,CAAE;YAAC,SAAS,EAAC,qBAAqB;YAAA,UAAC;UAAU;YAAA;YAAA;YAAA;UAAA;QAAS;UAAA;UAAA;UAAA;QAAA,QAC9H;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAEd;EACJ,CAAC;EAED;IAAA;IACI;IACA;MAAK,KAAK,EAAC,oCAAoC;MAAA,uBAC3C,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACT;AAEd,CAAC;AAAC,GA7CIX,KAAK;EAAA,QAEcJ,WAAW,EACTA,WAAW,EACrBA,WAAW,EACLA,WAAW,EAEbC,WAAW;AAAA;AAAA,KAP1BG,KAAK;AA+CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}