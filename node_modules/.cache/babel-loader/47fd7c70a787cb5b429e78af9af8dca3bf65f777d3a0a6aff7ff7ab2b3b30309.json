{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const hangmanSlice = createSlice({\n  name: 'hangman',\n  initialState: {\n    wrongLetters: [],\n    correctLetters: [],\n    attemptsLeft: 6,\n    usedLetters: [],\n    keys: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    word: ''\n  },\n  reducers: {\n    // Update Attempts Left\n    updateAttemptsLeft: state => {\n      state.attempsLeft = state.attemptsLeft - 1;\n    },\n    // Get a random word\n    getRandomWord: (state, action) => {\n      state.word = action.payload;\n    },\n    addCorrectLetter: (state, action) => {\n      state.correctLetters.push(action.payload);\n    },\n    addWrongLetter: (state, action) => {\n      state.wrongLetters.push(action.payload);\n    },\n    addUsedLetter: (state, action) => {\n      state.usedLetters.push(action.payload);\n    }\n  }\n});\nexport const {\n  updateAttemptsLeft,\n  getRandomWord\n} = hangmanSlice.actions;\nexport default hangmanSlice.reducer;","map":{"version":3,"names":["createSlice","hangmanSlice","name","initialState","wrongLetters","correctLetters","attemptsLeft","usedLetters","keys","word","reducers","updateAttemptsLeft","state","attempsLeft","getRandomWord","action","payload","addCorrectLetter","push","addWrongLetter","addUsedLetter","actions","reducer"],"sources":["C:/Users/Employee/Desktop/React/hangman/src/store/hangman.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const hangmanSlice = createSlice({\r\n\r\n    name: 'hangman',\r\n\r\n    initialState: {\r\n        wrongLetters: [],\r\n        correctLetters: [],\r\n        attemptsLeft: 6,\r\n        usedLetters: [],\r\n        keys: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\r\n        word: '',\r\n\r\n\r\n    },\r\n\r\n    reducers: {\r\n            // Update Attempts Left\r\n            updateAttemptsLeft: (state) => {\r\n                state.attempsLeft = state.attemptsLeft - 1;\r\n            },\r\n            // Get a random word\r\n            getRandomWord: (state, action) => {\r\n                state.word = action.payload;\r\n            },\r\n            addCorrectLetter: (state, action) => {\r\n                state.correctLetters.push(action.payload);\r\n            },\r\n            addWrongLetter: (state, action) => {\r\n                state.wrongLetters.push(action.payload);\r\n            },\r\n            addUsedLetter: (state, action) => {\r\n                state.usedLetters.push(action.payload);\r\n            },\r\n        },\r\n\r\n});\r\n\r\nexport const { updateAttemptsLeft, getRandomWord } = hangmanSlice.actions;\r\n\r\nexport default hangmanSlice.reducer;\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;EAEpCE,IAAI,EAAE,SAAS;EAEfC,YAAY,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACxIC,IAAI,EAAE;EAGV,CAAC;EAEDC,QAAQ,EAAE;IACF;IACAC,kBAAkB,EAAGC,KAAK,IAAK;MAC3BA,KAAK,CAACC,WAAW,GAAGD,KAAK,CAACN,YAAY,GAAG,CAAC;IAC9C,CAAC;IACD;IACAQ,aAAa,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC9BH,KAAK,CAACH,IAAI,GAAGM,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,gBAAgB,EAAE,CAACL,KAAK,EAAEG,MAAM,KAAK;MACjCH,KAAK,CAACP,cAAc,CAACa,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAC7C,CAAC;IACDG,cAAc,EAAE,CAACP,KAAK,EAAEG,MAAM,KAAK;MAC/BH,KAAK,CAACR,YAAY,CAACc,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAC3C,CAAC;IACDI,aAAa,EAAE,CAACR,KAAK,EAAEG,MAAM,KAAK;MAC9BH,KAAK,CAACL,WAAW,CAACW,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAC1C;EACJ;AAER,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL,kBAAkB;EAAEG;AAAc,CAAC,GAAGb,YAAY,CAACoB,OAAO;AAEzE,eAAepB,YAAY,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}