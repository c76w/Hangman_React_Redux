{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Employee\\\\Desktop\\\\React\\\\hangman\\\\src\\\\components\\\\Popup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { resetGame } from '../store/hangman';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Popup = props => {\n  _s();\n  const word = useSelector(state => state.hangman.word); // Get the word from hangman state\n  const gameStatus = useSelector(state => state.hangman.gameStatus); // Get the game status from hangman state\n\n  const modal = document.querySelector(\".modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openModalBtn = document.querySelector(\".btn-open\");\n  const closeModalBtn = document.querySelector(\".btn-close\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n  };\n  useEffect(() => {\n    alert('Game status from popup: ' + gameStatus);\n  }, [gameStatus]);\n  const dispatch = useDispatch(); // Set the disptach\n\n  const handleOnClick = () => {\n    // Set a random word in the hangman reducer\n    dispatch(resetGame());\n  };\n  const Message = () => {\n    // Popup message to show if the user has won the game by guessing all the correct letters\n    if (gameStatus === 'win') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"popupModel\",\n          className: \"my-4\",\n          children: [\"Congratulations - You Won! \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 85\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              handleOnClick();\n              props.randomWord();\n            },\n            className: \"btn btn-dark btn-lg\",\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    }\n    // Popup message to show if the user has lost the game by using all their attempts\n    if (gameStatus === 'lose') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"popupModel\",\n          className: \"h1 my-4\",\n          children: [\"Sorry - You lost! \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDE14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"The word was \", word, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Better luck next time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              handleOnClick();\n              props.randomWord();\n            },\n            className: \"btn btn-dark btn-lg\",\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // Pop up to dispaly results\n    _jsxDEV(\"section\", {\n      id: \"popupModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'modal ' + (gameStatus === '' ? 'hidden' : ''),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-close\",\n            onClick: closeModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popupBody\",\n          children: /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'overlay ' + (gameStatus === '' ? 'hidden' : '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Popup, \"KVfHaFyQJRXGukvB0qBU7DR+SpQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","resetGame","Popup","props","word","state","hangman","gameStatus","modal","document","querySelector","overlay","openModalBtn","closeModalBtn","openModal","classList","remove","closeModal","add","alert","dispatch","handleOnClick","Message","randomWord"],"sources":["C:/Users/Employee/Desktop/React/hangman/src/components/Popup.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { resetGame } from '../store/hangman';\r\n\r\nconst Popup = (props) => {\r\n\r\n    const word = useSelector((state) => state.hangman.word); // Get the word from hangman state\r\n    const gameStatus = useSelector((state) => state.hangman.gameStatus); // Get the game status from hangman state\r\n\r\n    const modal = document.querySelector(\".modal\");\r\n    const overlay = document.querySelector(\".overlay\");\r\n    const openModalBtn = document.querySelector(\".btn-open\");\r\n    const closeModalBtn = document.querySelector(\".btn-close\");\r\n\r\n\r\n    const openModal = function () {\r\n        modal.classList.remove(\"hidden\");\r\n        overlay.classList.remove(\"hidden\");\r\n    };\r\n\r\n    const closeModal = function () {\r\n        modal.classList.add(\"hidden\");\r\n        overlay.classList.add(\"hidden\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        alert('Game status from popup: ' + gameStatus)\r\n    }, [gameStatus]);\r\n\r\n    const dispatch = useDispatch(); // Set the disptach\r\n\r\n    const handleOnClick = () => {\r\n        // Set a random word in the hangman reducer\r\n        dispatch(resetGame());\r\n    }\r\n\r\n    const Message = () => {\r\n        // Popup message to show if the user has won the game by guessing all the correct letters\r\n        if (gameStatus === 'win') {\r\n            return (\r\n                <div className='text-center'>\r\n                    <h2 id='popupModel' className='my-4'>Congratulations - You Won! <span>&#127881;</span></h2>\r\n                    <div>\r\n                        <button type=\"button\" onClick={() => {handleOnClick(); props.randomWord();}} className='btn btn-dark btn-lg'>Play Again</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        // Popup message to show if the user has lost the game by using all their attempts\r\n        if (gameStatus === 'lose') {\r\n            return (\r\n                <div className='text-center'>\r\n                    <h2 id='popupModel' className='h1 my-4'>Sorry - You lost! <span>&#128532;</span></h2>\r\n                    <h4>The word was {word}!</h4>\r\n                    <p>Better luck next time.</p>\r\n                    <div>\r\n                        <button type=\"button\" onClick={() => {handleOnClick(); props.randomWord();}} className='btn btn-dark btn-lg'>Play Again</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        // Pop up to dispaly results\r\n        <section id='popupModal'>\r\n            <div className={'modal ' + (gameStatus === '' ? 'hidden' : '')} >\r\n                <div className=\"flex\">\r\n                    <button className='btn-close' onClick={closeModal}></button>\r\n                </div>\r\n                <div className='popupBody'>\r\n                    <Message />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={'overlay ' + (gameStatus === '' ? 'hidden' : '')}></div>\r\n        </section>\r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default Popup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}