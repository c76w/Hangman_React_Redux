{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Employee\\\\Desktop\\\\React\\\\hangman\\\\src\\\\components\\\\Attempts.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux'; // Import the useSelector from redux\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Attempts = () => {\n  _s();\n  // Declare the wrongLetters variable from the hangman slice store\n  const attemptsLeft = useSelector(state => state.hangman.attemptsLeft);\n  return (\n    /*#__PURE__*/\n    // Attempts left\n    // Use a conditioanl statement and show the attempts left in red if there is only one attempt left\n    _jsxDEV(\"div\", {\n      className: 'attemptsContainer ms-auto ' + (attemptsLeft === 1 ? 'danger' : ''),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Attempts Left: \", attemptsLeft]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n    // End Attempts LEft\n  );\n};\n_s(Attempts, \"DXxK/RK3NTT87mwA6zH5AyRfLYI=\", false, function () {\n  return [useSelector];\n});\n_c = Attempts;\nexport default Attempts;\nvar _c;\n$RefreshReg$(_c, \"Attempts\");","map":{"version":3,"names":["React","useSelector","Attempts","attemptsLeft","state","hangman"],"sources":["C:/Users/Employee/Desktop/React/hangman/src/components/Attempts.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux'; // Import the useSelector from redux\r\n\r\nconst Attempts = () => {\r\n\r\n    // Declare the wrongLetters variable from the hangman slice store\r\n    const attemptsLeft = useSelector((state) => state.hangman.attemptsLeft);\r\n\r\n    return (\r\n        // Attempts left\r\n        // Use a conditioanl statement and show the attempts left in red if there is only one attempt left\r\n        <div className={'attemptsContainer ms-auto '  + (attemptsLeft === 1 ? 'danger' : '')}>\r\n            <span>Attempts Left: {attemptsLeft}</span>\r\n        </div>\r\n        // End Attempts LEft\r\n    );\r\n};\r\n\r\nexport default Attempts;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa,CAAC,CAAC;AAAA;AAE3C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAEnB;EACA,MAAMC,YAAY,GAAGF,WAAW,CAAEG,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC;EAEvE;IAAA;IACI;IACA;IACA;MAAK,SAAS,EAAE,4BAA4B,IAAKA,YAAY,KAAK,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAE;MAAA,uBACjF;QAAA,WAAM,iBAAe,EAACA,YAAY;MAAA;QAAA;QAAA;QAAA;MAAA;IAAQ;MAAA;MAAA;MAAA;IAAA;IAE9C;EAAA;AAER,CAAC;AAAC,GAbID,QAAQ;EAAA,QAGWD,WAAW;AAAA;AAAA,KAH9BC,QAAQ;AAed,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}