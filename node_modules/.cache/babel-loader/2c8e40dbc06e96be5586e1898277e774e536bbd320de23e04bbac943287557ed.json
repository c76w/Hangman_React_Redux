{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Employee\\\\Desktop\\\\React\\\\hangman\\\\src\\\\components\\\\Popup.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; // Import useSelector and useDispatch from redux\nimport { resetGame } from '../store/hangman'; // Import the resetGame reducer from the hangman slice store\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Popup = props => {\n  _s();\n  const word = useSelector(state => state.hangman.word); // Get the word from hangman state\n  const gameStatus = useSelector(state => state.hangman.gameStatus); // Get the game status from hangman state\n\n  const modal = document.querySelector(\".modal\"); // Get the modal by class\n  const overlay = document.querySelector(\".overlay\"); // Get the modal overlay by class\n\n  const dispatch = useDispatch(); // Set the disptach\n\n  // Function to close the modal\n  const closeModal = () => {\n    // Hide the modal\n    modal.classList.add(\"hidden\");\n    // Hide the modal overlay\n    overlay.classList.add(\"hidden\");\n\n    // Set a random word in the hangman reducer\n    dispatch(resetGame());\n\n    // Reset the random word\n    props.randomWord();\n  };\n\n  // Function to handle the click play again button click\n  const handlePlayAgain = () => {\n    // Set a random word in the hangman reducer\n    dispatch(resetGame());\n  };\n  const Message = () => {\n    // Popup message to show if the user has won the game by guessing all the correct letters\n    if (gameStatus === 'win') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"popupModel\",\n          className: \"h1 my-4\",\n          children: [\"Congratulations - You Won! \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 88\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-5\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              handlePlayAgain();\n              props.randomWord();\n            },\n            className: \"btn btn-dark btn-lg\",\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    }\n    // Popup message to show if the user has lost the game by using all their attempts\n    if (gameStatus === 'lose') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"popupModel\",\n          className: \"h1 my-4\",\n          children: [\"Sorry - You lost! \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDE14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"my-3\",\n          children: [\"The word was \", word, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"my-3\",\n          children: \"Better luck next time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              handlePlayAgain();\n              props.randomWord();\n            },\n            className: \"btn btn-dark btn-lg\",\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // Popup Modal\n    // Pop up to dispaly results\n    _jsxDEV(\"section\", {\n      id: \"popupModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'modal ' + (gameStatus === '' ? 'hidden' : ''),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-close\",\n            onClick: closeModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popupBody\",\n          children: /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'overlay ' + (gameStatus === '' ? 'hidden' : '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n    // End Popup Modal\n  );\n};\n_s(Popup, \"G38aImuY+LwOGS4gjWnR8EAUyKA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","useSelector","useDispatch","resetGame","Popup","props","word","state","hangman","gameStatus","modal","document","querySelector","overlay","dispatch","closeModal","classList","add","randomWord","handlePlayAgain","Message"],"sources":["C:/Users/Employee/Desktop/React/hangman/src/components/Popup.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'; // Import useSelector and useDispatch from redux\r\nimport { resetGame } from '../store/hangman'; // Import the resetGame reducer from the hangman slice store\r\n\r\nconst Popup = (props) => {\r\n\r\n    const word = useSelector((state) => state.hangman.word); // Get the word from hangman state\r\n    const gameStatus = useSelector((state) => state.hangman.gameStatus); // Get the game status from hangman state\r\n\r\n    const modal = document.querySelector(\".modal\"); // Get the modal by class\r\n    const overlay = document.querySelector(\".overlay\"); // Get the modal overlay by class\r\n\r\n    const dispatch = useDispatch(); // Set the disptach\r\n\r\n    // Function to close the modal\r\n    const closeModal =  () => {\r\n        // Hide the modal\r\n        modal.classList.add(\"hidden\");\r\n        // Hide the modal overlay\r\n        overlay.classList.add(\"hidden\");\r\n\r\n        // Set a random word in the hangman reducer\r\n        dispatch(resetGame());\r\n        \r\n        // Reset the random word\r\n        props.randomWord();\r\n    };\r\n\r\n    // Function to handle the click play again button click\r\n    const handlePlayAgain = () => {\r\n        // Set a random word in the hangman reducer\r\n        dispatch(resetGame());\r\n    }\r\n\r\n    const Message = () => {\r\n        // Popup message to show if the user has won the game by guessing all the correct letters\r\n        if (gameStatus === 'win') {\r\n            return (\r\n                <div className='text-center'>\r\n                    <h2 id='popupModel' className='h1 my-4'>Congratulations - You Won! <span>&#127881;</span></h2>\r\n                    <div className='m-5'>\r\n                        <button type=\"button\" onClick={() => {handlePlayAgain(); props.randomWord();}} className='btn btn-dark btn-lg'>Play Again</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        // Popup message to show if the user has lost the game by using all their attempts\r\n        if (gameStatus === 'lose') {\r\n            return (\r\n                <div className='text-center'>\r\n                    <h2 id='popupModel' className='h1 my-4'>Sorry - You lost! <span>&#128532;</span></h2>\r\n                    <h4 className='my-3'>The word was {word}!</h4>\r\n                    <p className='my-3'>Better luck next time.</p>\r\n                    <div>\r\n                        <button type=\"button\" onClick={() => {handlePlayAgain(); props.randomWord();}} className='btn btn-dark btn-lg'>Play Again</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        // Popup Modal\r\n        // Pop up to dispaly results\r\n        <section id='popupModal'>\r\n            <div className={'modal ' + (gameStatus === '' ? 'hidden' : '')} >\r\n                <div className=\"flex\">\r\n                    <button className='btn-close' onClick={closeModal}></button>\r\n                </div>\r\n                <div className='popupBody'>\r\n                    <Message />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={'overlay ' + (gameStatus === '' ? 'hidden' : '')}></div>\r\n        </section>\r\n        // End Popup Modal\r\n    );\r\n};\r\n\r\nexport default Popup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}