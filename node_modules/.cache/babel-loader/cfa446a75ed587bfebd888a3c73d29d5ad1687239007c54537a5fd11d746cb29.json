{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Employee\\\\Desktop\\\\React\\\\hangman\\\\src\\\\components\\\\WrongLetters.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WrongLetters = () => {\n  _s();\n  // Get the wrong letters array from hangman state\n  const wrongLetters = useSelector(state => state.hangman.wrongLetters);\n  return (\n    /*#__PURE__*/\n    // Wrong Letters\n    _jsxDEV(\"div\", {\n      children: wrongLetters.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrongLettersContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Wrong: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), wrongLetters.map((letter, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: letter\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 45\n        }, this)).reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n    // End Wrong Letters\n  );\n};\n_s(WrongLetters, \"k6QPlFs+HqOKCxlJ5+L6sBRo5Ns=\", false, function () {\n  return [useSelector];\n});\n_c = WrongLetters;\nexport default WrongLetters;\nvar _c;\n$RefreshReg$(_c, \"WrongLetters\");","map":{"version":3,"names":["React","useSelector","WrongLetters","wrongLetters","state","hangman","length","map","letter","i","reduce","prev","curr"],"sources":["C:/Users/Employee/Desktop/React/hangman/src/components/WrongLetters.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst WrongLetters = () => {\r\n    // Get the wrong letters array from hangman state\r\n    const wrongLetters = useSelector((state) => state.hangman.wrongLetters);\r\n    return (\r\n        // Wrong Letters\r\n        <div>\r\n            {/* Display only if there are any wrong letters in the array then loop through the wrong letters array and display each wrong letter entered */}\r\n            {wrongLetters.length > 0 &&\r\n                <div className=\"wrongLettersContainer\">\r\n                    <span>Wrong: </span>\r\n                    {wrongLetters\r\n                        .map((letter, i) => <span key={i}>{letter}</span>)\r\n                        .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n        // End Wrong Letters\r\n    );\r\n};\r\n\r\nexport default WrongLetters;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAAC;AAE1C,MAAMC,YAAY,GAAG,MAAM;EAAA;EACvB;EACA,MAAMC,YAAY,GAAGF,WAAW,CAAEG,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC;EACvE;IAAA;IACI;IACA;MAAA,UAEKA,YAAY,CAACG,MAAM,GAAG,CAAC,iBACpB;QAAK,SAAS,EAAC,uBAAuB;QAAA,wBAClC;UAAA,UAAM;QAAO;UAAA;UAAA;UAAA;QAAA,QAAO,EACnBH,YAAY,CACRI,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBAAK;UAAA,UAAeD;QAAM,GAAVC,CAAC;UAAA;UAAA;UAAA;QAAA,QAAiB,CAAC,CACjDC,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAKD,IAAI,KAAK,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,CAACD,IAAI,EAAE,IAAI,EAAEC,IAAI,CAAC,EAAE,IAAI,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA;IAE5E;MAAA;MAAA;MAAA;IAAA;IAGd;EAAA;AAER,CAAC;AAAC,GAnBIV,YAAY;EAAA,QAEOD,WAAW;AAAA;AAAA,KAF9BC,YAAY;AAqBlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}